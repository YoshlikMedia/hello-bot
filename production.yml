version: '3'

volumes:
  bot_template_project_production_postgres_data: {}
  bot_template_project_production_postgres_data_backups: {}
  bot_template_project_production_nginx: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: bot_template_project_production_django
    platform: linux/x86_64
    restart: on-failure
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: bot_template_project_production_postgres
    restart: on-failure
    volumes:
      - bot_template_project_production_postgres_data:/var/lib/postgresql/data:Z
      - bot_template_project_production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: bot_template_project_production_nginx
    restart: always
    volumes:
#      - ./compose/production/nginx/conf.d/:/etc/nginx/conf.d/
#      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ./templates:/etc/nginx/html

#      - media_volume:/usr/src/app/media
    #      - static_files:/home/app/staticfiles
#      - ./nginx:/etc/nginx/acme:z
#      - production_nginx:/etc/nginx/acme:z
#      - ./production/nginx/conf.d/:/etc/nginx/conf.d/
#      - static_files:/home/app/staticfiles
    ports:
      - "0.0.0.0:8001:8001"
#      - "0.0.0.0:80:8001"
#      - "0.0.0.0:443:443"
#      - "0.0.0.0:5555:5555"

  redis:
    image: redis:6
    restart: on-failure

  celeryworker:
    <<: *django
    image: bot_template_project_production_celeryworker
    restart: on-failure
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: bot_template_project_production_celerybeat
    restart: on-failure
    command: /start-celerybeat



